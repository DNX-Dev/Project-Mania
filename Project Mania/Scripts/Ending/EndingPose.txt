// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Ending Pose Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.timer
private alias object.value1 : object.xoffset
private alias object.value2 : object.tailFrame

// Player Aliases
private alias object.state : player.state
private alias object.xpos : player.xpos
private alias object.ypos : player.ypos
private alias object.speed : player.speed
private alias object.frame : player.frame
private alias object.direction : player.direction
private alias object.up : player.up
private alias object.drawOrder : player.drawOrder
private alias object.controlMode : player.controlMode


// ========================
// Function Declarations
// ========================

reserve function EndingPose_HandleXOffset


// ========================
// Function Definitions
// ========================

private function EndingPose_HandleXOffset
	if object.xoffset > 0
		object.xoffset -= 16
	end if
end function


// ========================
// Events
// ========================

event ObjectUpdate
	switch object.state
	case 0
		object.state++
		if stage.playerListPos == PLAYER_TAILS_ALONE
			// A little extra setup for Tails's tails
			object.tailFrame = 36
		end if
		// [Fallthrough]
	case 1
		object.timer++
		if stage.playerListPos == PLAYER_TAILS_ALONE
			object.tailFrame = object.timer
			object.tailFrame >>= 3
			object.tailFrame %= 5
			object.tailFrame += 36
		end if

		if object.timer == 240
			currentPlayer = 1
			while currentPlayer < playerCount
				ResetObjectEntity(currentPlayer, TypeName[Ending Pose], 0, player[currentPlayer].xpos, player[currentPlayer].ypos)
				player[currentPlayer].drawOrder = 6
				player[currentPlayer].state = 14
				player[currentPlayer].frame = 43
				player[currentPlayer].direction = FACING_LEFT
				currentPlayer++
			loop
			
			object.timer = 0
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 1
				break
				
			case PLAYER_TAILS_ALONE
				object.frame = 14
				break
				
			case PLAYER_KNUX_ALONE
				object.frame = 25
				break
				
			end switch
			object.state++
			object.tailFrame = 0
		else
			currentPlayer = 1
			while currentPlayer < playerCount
				if player[currentPlayer].speed == 0
					player[currentPlayer].direction = FACING_LEFT
				end if
				currentPlayer++
			loop
		end if
		break

	case 2
		CallFunction(EndingPose_HandleXOffset)
		object.timer++
		if object.timer == 12
			object.timer = 0
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 2
				object.ixpos = camera[0].xpos
				object.iypos = camera[0].ypos
				break
				
			case PLAYER_TAILS_ALONE
			case PLAYER_KNUX_ALONE
				break
				
			end switch
			object.state++
		end if
		break

	case 3
		CallFunction(EndingPose_HandleXOffset)
		object.timer++
		if object.timer == 4
			object.timer = -1560
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 3
				break
				
			case PLAYER_TAILS_ALONE
				object.frame = 15
				object.ixpos = camera[0].xpos
				object.iypos = camera[0].ypos
				break
				
			case PLAYER_KNUX_ALONE
				object.frame = 26
				object.ixpos = camera[0].xpos
				object.iypos = camera[0].ypos
				break
				
			end switch
			
			object.state++
		end if
		break

	case 4
		if object.timer < 320
			object.timer += 12
		else
			// Roll the credits!
			stage.activeList = PRESENTATION_STAGE
			stage.listPos = 2
			
			lampPostID = 0
			recMilliSeconds = 0
			recSeconds = 0
			recMinutes = 0
			LoadStage()
		end if
		
		if object.timer > 0
			temp0 = object.timer
		else
			temp0 = 0
		end if
		SetScreenFade(0, 0, 0, temp0)
		break

	case 5
		object.timer++
		if object.timer == 80
			object.timer = 0
			object.state++
		else
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 4
				break
				
			case PLAYER_TAILS_ALONE
				object.frame = 16
				break
				
			case PLAYER_KNUX_ALONE
				object.frame = 27
				break
				
			end switch

			currentPlayer = 1
			while currentPlayer < playerCount
				if player[currentPlayer].speed == 0
					player[currentPlayer].direction = FACING_LEFT
				end if
				
				currentPlayer++
			loop
		end if
		break

	case 6
		object.frame = object.timer
		object.frame >>= 2
		object.frame &= 1
		
		switch stage.playerListPos
		case PLAYER_SONIC_ALONE
		case PLAYER_SONIC_AND_TAILS
			object.frame += 5
			break
			
		case PLAYER_TAILS_ALONE
			object.frame += 17
			break
			
		case PLAYER_KNUX_ALONE
			object.frame += 27
			break
			
		end switch

		object.timer++
		if object.timer == 80
			object.timer = 0
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 7
				break
				
			case PLAYER_TAILS_ALONE
				object.frame = 19
				break
				
			case PLAYER_KNUX_ALONE
				object.frame = 29
				break
				
			end switch

			currentPlayer = 1
			while currentPlayer < playerCount
				player[currentPlayer].up = 1
				player[currentPlayer].controlMode = CONTROLMODE_NONE
				currentPlayer++
			loop
			
			CreateTempObject(TypeName[Emeralds], 0, object.xpos, object.ypos)
			object[tempObjectPos].drawOrder = 6
			
			object.state++
		else
			currentPlayer = 1
			while currentPlayer < playerCount
				if player[currentPlayer].speed == 0
					player[currentPlayer].direction = FACING_LEFT
				end if
				currentPlayer++
			loop
		end if
		break

	case 7
		break

	case 8
		if object.timer < 384
			object.timer += 6
		else
			object.timer = 256
			
			// Set all FG chunks to use their flowered versions
			SetTileLayerEntry(184, 0, 2, 2)
			SetTileLayerEntry(185, 0, 3, 2)
			SetTileLayerEntry(186, 0, 2, 3)
			SetTileLayerEntry(187, 0, 3, 3)
			SetTileLayerEntry(188, 0, 4, 2)
			SetTileLayerEntry(189, 0, 5, 2)
			SetTileLayerEntry(190, 0, 4, 3)
			SetTileLayerEntry(191, 0, 5, 3)
			
			object.state++
		end if

		SetScreenFade(208, 255, 224, object.timer)
		break

	case 9
		if object.timer > 0
			object.timer -= 16
			SetScreenFade(208, 255, 224, object.timer)
		else
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 8
				break
				
			case PLAYER_TAILS_ALONE
				object.frame = 20
				break
				
			case PLAYER_KNUX_ALONE
				object.frame = 30
				break
				
			end switch

			object.state++
			currentPlayer = 1
			while currentPlayer < playerCount
				ResetObjectEntity(currentPlayer, TypeName[Ending Pose], 0, player[currentPlayer].xpos, player[currentPlayer].ypos)
				player[currentPlayer].drawOrder = 6
				player[currentPlayer].state = 12
				player[currentPlayer].frame = 43
				player[currentPlayer].direction = FACING_LEFT
				currentPlayer++
			loop
		end if
		break

	case 10
		switch stage.playerListPos
		case PLAYER_SONIC_ALONE
		case PLAYER_SONIC_AND_TAILS
			object.frame = object.timer
			object.frame /= 6
			object.frame &= 1
			object.frame += 8
			break
			
		case PLAYER_TAILS_ALONE
			object.frame = object.timer
			object.frame /= 10
			object.frame &= 3
			object.frame += 20
			if object.timer >= 40
				object.frame = 23
			end if
			break
			
		case PLAYER_KNUX_ALONE
			object.frame = object.timer
			object.frame /= 10
			object.frame &= 3
			object.frame += 30
			if object.timer >= 40
				object.frame = 34
			end if
			break
			
		end switch

		object.timer++
		if object.timer == 42
			object.timer = 0
			object.state++
		end if
		break

	case 11
		object.timer++
		if object.timer == 60
			object.timer = 0
			switch stage.playerListPos
			case PLAYER_SONIC_ALONE
			case PLAYER_SONIC_AND_TAILS
				object.frame = 1
				break
				
			case PLAYER_TAILS_ALONE
				object.frame = 14
				break
				
			case PLAYER_KNUX_ALONE
				object.frame = 25
				break
				
			end switch

			object.state = 2
		end if
		break

	case 12
		object.frame = object.timer
		object.frame /= 10
		object.frame &= 3
		object.frame += 20
		if object.timer >= 40
			object.frame = 23
		end if
		
		object.timer++
		if object.timer == 42
			object.timer = 0
			object.state++
		end if
		break

	case 13
		object.timer++
		if object.timer == 60
			object.timer = 0
			object.frame = 43
			object.state++
		end if
		break

	case 14
		object.timer++
		if object.timer == 8
			object.frame++
			object.timer = 0
			object.state++
		end if
		break
		
	end switch
end event


event ObjectDraw
	if object.tailFrame != 0
		// Tails should have one of his tails sprites in tow
		DrawSprite(object.tailFrame)
	end if
	
	DrawSpriteFX(object.frame, FX_FLIP, object.xpos, object.ypos)
	
	if object.entityPos == 0
		if object.state > 0
			temp0 = screen.xcenter
			temp0 -= 96
			temp0 -= object.xoffset
			if stage.player2Enabled == true
				if options.region == true
					temp1 = 42
				else
					temp1 = 41
				end if
			else
				temp1 = 10
				if stage.playerListPos < PLAYER_SONIC_AND_TAILS
					temp1 += stage.playerListPos
				end if
			end if

			DrawSpriteScreenXY(temp1, temp0, 80)
		end if
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Ending/Objects.gif")
	
	// 0 - Sonic Idle Frame
	SpriteFrame(-14, -20, 30, 39, 28, 16)
	
	// 1-3 - Sonic's Final Pose Animation Frames
	SpriteFrame(-16, -16, 32, 35, 3, 220)
	SpriteFrame(-18, -27, 44, 71, 36, 184)
	SpriteFrame(-56, -68, 174, 134, 81, 121)
	
	// 4-10 - Sonic's Good Ending Animation Frames
	SpriteFrame(-10, -21, 24, 40, 3, 16)
	SpriteFrame(-10, -21, 24, 40, 3, 16)
	SpriteFrame(-14, -21, 28, 40, 3, 57)
	SpriteFrame(-16, -20, 29, 39, 3, 98)
	SpriteFrame(-16, -21, 32, 40, 3, 138)
	SpriteFrame(-16, -21, 32, 40, 3, 179)
	SpriteFrame(-48, 0, 96, 31, 256, 141)
	
	// 11 - "Miles 'Tails' Prower In Sonic the Hedgehog"
	SpriteFrame(-48, -17, 96, 48, 256, 182)
	
	// 12 - "Knuckles the Echidna in Sonic the Hedgehog"
	SpriteFrame(-48, -17, 96, 48, 256, 124)
	
	// 13 - Tails's Final Pose Animation Frames
	SpriteFrame(-10, -13, 24, 31, 288, 16)
	SpriteFrame(-19, -12, 33, 31, 254, 16)
	SpriteFrame(-55, -48, 111, 96, 400, 1)
	
	// 16-23 - Tails's Good Ending Animation Frames
	// (The two medium-sized transition frames next to the big sprite are unused)
	SpriteFrame(-12, -16, 27, 34, 313, 16)
	SpriteFrame(-12, -16, 27, 34, 59, 16)
	SpriteFrame(-15, -16, 30, 34, 87, 16)
	SpriteFrame(-15, -14, 31, 32, 118, 16)
	SpriteFrame(-12, -16, 25, 34, 150, 16)
	SpriteFrame(-12, -16, 25, 34, 176, 16)
	SpriteFrame(-12, -16, 25, 34, 202, 16)
	SpriteFrame(-12, -16, 25, 34, 228, 16)
	
	// 24-26 - Knuckles's Final Pose Animation Frames
	SpriteFrame(-14, -23, 27, 41, 325, 57)
	SpriteFrame(-16, -21, 28, 39, 296, 57)
	SpriteFrame(-32, -52, 64, 104, 448, 98)
	
	// 27-35 - Knuckles's Good Ending Animation Frames
	// (The two medium-sized transition frames next to the big sprite are unused)
	SpriteFrame(-12, -23, 24, 41, 32, 57)
	SpriteFrame(-16, -23, 28, 41, 57, 57)
	SpriteFrame(-18, -22, 45, 40, 86, 57)
	SpriteFrame(-16, -23, 33, 41, 132, 57)
	SpriteFrame(-16, -23, 33, 41, 166, 57)
	SpriteFrame(-16, -23, 33, 41, 200, 57)
	SpriteFrame(-16, -23, 33, 41, 200, 57)
	SpriteFrame(-16, -23, 27, 41, 268, 57)
	SpriteFrame(-16, -23, 33, 41, 234, 57)
	
	// 36-40 - Tails's Tails' Frames
	// Drawn using object.tailFrame, rather than the base object.frame
	SpriteFrame(-21, -6, 16, 24, 256, 99)
	SpriteFrame(-25, -6, 20, 24, 273, 99)
	SpriteFrame(-25, -6, 20, 24, 294, 99)
	SpriteFrame(-25, -6, 20, 24, 315, 99)
	SpriteFrame(-25, -6, 20, 24, 336, 99)
	
	// 41 - "Sonic the Hedgehog and Tails"
	SpriteFrame(-48, 0, 96, 40, 256, 141)
	
	// 42 - "Sonic the Hedgehog and Miles"
	SpriteFrame(-48, 0, 96, 40, 256, 199)
	
	// 43-44 - P2 Tails Pose Frames
	SpriteFrame(-10, -13, 22, 31, 58, 99)
	SpriteFrame(-20, -17, 36, 35, 44, 131)
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Ending/Objects.gif")
	SpriteFrame(-56, -68, 174, 134, 81, 121)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
